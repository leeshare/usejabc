package com.usejabc.model;

import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.UUID;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.IAtom;
import com.jfinal.plugin.activerecord.Record;
import com.usejabc.model.PassportUseraccesslog;
import com.usejabc.model.base.BasePassportUseraccesslog;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class PassportUseraccesslog extends BasePassportUseraccesslog<PassportUseraccesslog> {
	public static final PassportUseraccesslog dao = new PassportUseraccesslog();
	
	public PassportUseraccesslog getAccessLog(int userId){
		List<PassportUseraccesslog> logs = dao.find(String.format("SELECT * FROM Passport_UserAccessLog WHERE UserID = %d", userId));
		if(logs.size() >= 1)
			return logs.get(0);
		return null;
	}
	
	public void saveAccessFailLog(int userId){
		boolean succeed = Db.tx(new IAtom() {
			
			@Override
			public boolean run() throws SQLException {
				String sql = String.format("UPDATE Passport_UserAccessLog SET FailedPasswordAttemptStart = '%s', FailedPasswordAttemptCount=1 WHERE UserID = %d and FailedPasswordAttemptStart IS NULL", new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()), userId);
				int count = Db.update(sql);
				if(count == 0){
					sql = String.format("UPDATE Passport_UserAccessLog SET FailedPasswordAttemptCount = FailedPasswordAttemptCount+1 WHERE UserID = %d", userId);
					count = Db.update(sql);
					if(count == 0){
						Record log = new Record().set("AccessLogID", UUID.randomUUID()).set("UserID", userId).set("FailedPasswordAttemptCount", 1).set("FailedPasswordAttemptStart", new Date());
						Db.save("Passport_UserAccessLog", log);
					}
				}
				return true;
			}
		});
		
		return;
	}
	
	public void saveAccessSucceedLog(int userId){
		boolean succeed = Db.tx(new IAtom() {
			
			@Override
			public boolean run() throws SQLException {
				String sql = String.format("UPDATE Passport_UserAccessLog SET FailedPasswordAttemptStart = NULL, FailedPasswordAttemptCount = 0, LastLoginDate = '%s' WHERE UserID = %d", new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()), userId);
				int count = Db.update(sql);
				if(count == 0){
					Record log = new Record().set("AccessLogID", UUID.randomUUID()).set("UserID", userId).set("FailedPasswordAttemptCount", 0).set("LastLoginDate", new Date());
					Db.save("Passport_UserAccessLog", log);
				}
				return true;
			}
		});
		
		return;
	}
}
